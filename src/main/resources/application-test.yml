

spring:
  data:
    mongodb:
      authentication-database: admin
      # uri : mongodb://svc.sel3.cloudtype.app:31273
      host: svc.sel3.cloudtype.app
      port: 31273
      username: root
      password: 1234
      database: test
  batch:
    jdbc:
      initialize-schema: always
  properties:
    hibernate:
      default_batch_fetch_size: 100
  sql:
    init:
      mode: always
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  redis:
    host: svc.sel4.cloudtype.app
    port: 31803
    #h2:
    # console:
    #  enabled: true

  datasource:
    url: jdbc:mariadb://svc.sel3.cloudtype.app:32123/test
    username: root
    password: test

  servlet:
    multipart:
      maxFileSize: 10MB
      maxRequestSize: 10MB
  jpa:
    defer-datasource-initialization: false
    hibernate:
      ddl-auto: create-drop

    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          facebook:
            client-id: 493256342875107
            client-secret: 3cb50381645433476df45dad55aea3c0
            scope:
              - public_profile
              - email
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:3001/login/oauth2/code/naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL}
    password: ${PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  main:
    allow-circular-references: true
jwt.secretkey: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK
logging.level:
  org.hibernate.SQL: debug
redirect-url: http://localhost:3001/oauth2/authorization/

cloud:
  aws:
    region:
      static: ap-northeast-2
    credentials:
      accessKey: AKIARXNWSWHLKSX5IVFT
      secretKey: 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
    s3:
      endpoint: https://s3.ap-northeast-2.amazonaws.com
      bucket: s3-fastcampus
domain:
  url: http://localhost:3001
front:
  domain:
    url: http://localhost:3001
port:
  domain:
    url: http://localhost:3001
